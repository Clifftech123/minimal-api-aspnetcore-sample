// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using minimal_api_aspnetcore_sample.Infrastructure.Context;

#nullable disable

namespace minimal_api_aspnetcore_sample.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240805160834_AddIngredientsTable")]
    partial class AddIngredientsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("recipe")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("minimal_api_aspnetcore_sample.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients", "recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Salt",
                            Quantity = "1 tsp",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepper",
                            Quantity = "1 tsp",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Olive Oil",
                            Quantity = "1 tbsp",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chicken Breast",
                            Quantity = "1 lb",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Salt",
                            Quantity = "1 tsp",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pepper",
                            Quantity = "1 tsp",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Olive Oil",
                            Quantity = "1 tbsp",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Chicken Breast",
                            Quantity = "1 lb",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Salt",
                            Quantity = "1 tsp",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Pepper",
                            Quantity = "1 tsp",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Olive Oil",
                            Quantity = "1 tbsp",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "Chicken Breast",
                            Quantity = "1 lb",
                            RecipeId = 3
                        });
                });

            modelBuilder.Entity("minimal_api_aspnetcore_sample.Models.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions", "recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Preheat oven to 350 degrees",
                            RecipeId = 1,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Season chicken with salt and pepper",
                            RecipeId = 1,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Heat olive oil in a large skillet over medium heat",
                            RecipeId = 1,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cook chicken until golden brown",
                            RecipeId = 1,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Preheat oven to 350 degrees",
                            RecipeId = 2,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Season chicken with salt and pepper",
                            RecipeId = 2,
                            StepNumber = 2
                        });
                });

            modelBuilder.Entity("minimal_api_aspnetcore_sample.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Recipes", "recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Italian",
                            Description = "A classic Italian dish made with breaded chicken, marinara sauce, and mozzarella cheese",
                            Title = "Chicken Parmesan"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Italian",
                            Description = "A creamy pasta dish made with fettuccine, chicken, and Alfredo sauce",
                            Title = "Chicken Alfredo"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Italian",
                            Description = "A savory chicken dish made with Marsala wine, mushrooms, and garlic",
                            Title = "Chicken Marsala"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Italian",
                            Description = "A tangy chicken dish made with lemon, capers, and white wine",
                            Title = "Chicken Piccata"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Italian",
                            Description = "A hearty chicken stew made with tomatoes, onions, and bell peppers",
                            Title = "Chicken Cacciatore"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Italian",
                            Description = "A creamy chicken dish made with spinach, mushrooms, and Parmesan cheese",
                            Title = "Chicken Florentine"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Italian",
                            Description = "A rich pasta dish made with chicken, mushrooms, and a creamy sauce",
                            Title = "Chicken Tetrazzini"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Italian",
                            Description = "A flavorful chicken dish made with lemon, capers, and white wine",
                            Title = "Chicken Scallopini"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Italian",
                            Description = "A delicious chicken dish made with prosciutto, sage, and white wine",
                            Title = "Chicken Saltimbocca"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Italian",
                            Description = "A light and tangy chicken dish made with lemon, butter, and white wine",
                            Title = "Chicken Francese"
                        });
                });

            modelBuilder.Entity("minimal_api_aspnetcore_sample.Models.Ingredient", b =>
                {
                    b.HasOne("minimal_api_aspnetcore_sample.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("minimal_api_aspnetcore_sample.Models.Instruction", b =>
                {
                    b.HasOne("minimal_api_aspnetcore_sample.Models.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("minimal_api_aspnetcore_sample.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Instructions");
                });
#pragma warning restore 612, 618
        }
    }
}
